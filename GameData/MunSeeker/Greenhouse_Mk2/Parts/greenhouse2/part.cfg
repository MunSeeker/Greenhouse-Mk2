// MunSeeker Greenhouse Mk2 TAC (compatible with TAC Life Support by Taranis Elsu)
// from MunSeeker's Artisanal Devices (MAD)
//
// The greenhouse texture is a modification of the original KSP Structural Fuselage texture, (C) Squad.
// MunSeeker's greenhouse references the stock KSP structural fuselage model. The part.cfg contains code 
// segments from TAC LS parts and other code shared throughout the KSP community.
//
// Kerbal Space Program is Copyright (C) 2011-2014 Squad. See http://kerbalspaceprogram.com/. 
// This project is in no way associated with nor endorsed by Squad.
// 
// This code is licensed under the Attribution-NonCommercial-ShareAlike 3.0 (CC BY-NC-SA 3.0)
// creative commons license. See <http://creativecommons.org/licenses/by-nc-sa/3.0/legalcode>
// for full details.
// 
// Attribution — You are free to modify this code, so long as you mention that the resulting
// work is based upon or adapted from this code.
// 
// Non-commercial - You may not use this work for commercial purposes.
// 
// Share Alike — If you alter, transform, or build upon this work, you may distribute the
// resulting work only under the same or similar license to the CC BY-NC-SA 3.0 license.
//
PART
{
// Kerbal Space Program - Part Config
// 

// --- general parameters ---
name = MunSeeker_Greenhouse_Mk2
module = Part
author = MunSeeker

// --- asset parameters ---
scale = 0.01


// --- node definitions ---
node_stack_top = 0.0, 75.0, 0.0, 0.0, 1.0, 0.0
node_stack_bottom = 0.0, -76.0, 0.0, 0.0, 1.0, 0.0
node_attach = 0.0, 0.0, -51.0, 0.0, 0.0, 1.0, 1



// --- editor parameters ---
	TechRequired = advConstruction
	entryCost = 6000
	cost = 2500
	category = Utility
	subcategory = 0
	title = MunSeeker Greenhouse Mk2 TAC
	manufacturer = MunSeeker's Artisanal Devices
	description = A greenhouse designed for TAC life support (v0.9+). Converts Electricity (a lot), Waste, Carbon Dioxide and Wastewater to Food. There is some loss in this process, so the crew will still need to be supplied. One greenhouse will use 50% of the waste products of 3 Kerbals and supply them with 15% Oxygen, 30% Water and 35% Food of their total needs.

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,1,1,1,0

	// --- standard part parameters ---
	mass = 3
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.3
	angularDrag = 2
	crashTolerance = 20
	breakingForce = 50
	breakingTorque = 50
	maxTemp = 3000
	fuelCrossFeed = True


	MODEL 
	{
		model = Squad/Parts/FuelTank/MK1FuselageStructural/model
		scale = 0.8, 0.8, 0.8
		texture = model000, MunSeeker/Greenhouse_Mk2/Parts/greenhouse2/greenhouse_mk2_000
		texture = model001, MunSeeker/Greenhouse_Mk2/Parts/greenhouse2/greenhouse_mk2_001
	}


	MODULE
	{
		name = TacGenericConverter
		converterName = Greenhouse

		// Rated for how many Kerbals
		conversionRate = 3

		// A comma separated list of resources to use as inputs.
		// For each resource, list the resource name and the amount (which
		// is multiplied by the conversionRate)
		inputResources = CarbonDioxide, 0.00175, WasteWater, 0.0000123, Waste, 0.0000023, ElectricCharge, 0.2

		// A comma separated list of resources to output. Same as above
		// but also specify whether it should keep converting if the
		// resource is full (generating excess that will be thrown away).
		// target: O2: 15%  H2O: 30%  Food: 35%
		outputResources = Oxygen, 0.000075, false, Water, 0.0000064, false, Food, 0.00000392, false
	}
	
	MODULE
	{
		name = ModuleScienceExperiment	

		experimentID = crewReport

		experimentActionName = Crew Report
		resetActionName = Discard Crew Report
		reviewActionName = Review Report

		useStaging = False	
		useActionGroups = True
		hideUIwhenUnavailable = True	
		rerunnable = True

		xmitDataScalar = 1.0
	}

	MODULE
	{
		name = ModuleConnectedLivingSpace
		passable = true
	}

	//-----------onboard resources-------------//

	RESOURCE
	{
		name = Food
		amount = 0
		maxAmount = 50
	}

	RESOURCE
	{
		name = Water
		amount = 0
		maxAmount = 50
	}

	RESOURCE
	{
		name = Oxygen
		amount = 0
		maxAmount = 10000
	}

	RESOURCE
	{
		name = Waste
		amount = 8
		maxAmount = 12
	}

	RESOURCE
	{
		name = CarbonDioxide
		amount = 2000
		maxAmount = 5000
	}

	RESOURCE
	{
		name = WasteWater
		amount = 8
		maxAmount = 12
	}

}
